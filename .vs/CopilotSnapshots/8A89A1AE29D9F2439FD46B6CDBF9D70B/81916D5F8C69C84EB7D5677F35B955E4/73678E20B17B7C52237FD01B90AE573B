using CommunityToolkit.Maui.Alerts;
using CommunityToolkit.Maui.Core;
using Font = Microsoft.Maui.Font;
using Syncfusion.Maui.Toolkit.SegmentedControl; // Ensure the namespace is included
using System.Linq;
using Managing.Models;

namespace Managing
{
    public partial class AppShell : Shell
    {
        public AppShell()
        {
            InitializeComponent();
            this.Navigated += AppShell_Navigated;
            UpdateMenuVisibility(); // Ensure menu is hidden on startup if not logged in
        }

        private async void AppShell_Navigated(object sender, ShellNavigatedEventArgs e)
        {
            UpdateMenuVisibility(); // Update menu on every navigation
            if (App.CurrentUser == null && e.Current.Location.OriginalString != "//LoginPage")
            {
                await Shell.Current.GoToAsync("//LoginPage");
            }
        }

        public static async Task DisplaySnackbarAsync(string message)
        {
            CancellationTokenSource cancellationTokenSource = new CancellationTokenSource();

            var snackbarOptions = new SnackbarOptions
            {
                BackgroundColor = Color.FromArgb("#FF3300"),
                TextColor = Colors.White,
                ActionButtonTextColor = Colors.Yellow,
                CornerRadius = new CornerRadius(0),
                Font = Font.SystemFontOfSize(18),
                ActionButtonFont = Font.SystemFontOfSize(14)
            };

            var snackbar = Snackbar.Make(message, visualOptions: snackbarOptions);

            await snackbar.Show(cancellationTokenSource.Token);
        }

        public static async Task DisplayToastAsync(string message)
        {
            // Toast is currently not working in MCT on Windows
            if (OperatingSystem.IsWindows())
                return;

            var toast = Toast.Make(message, textSize: 18);

            var cts = new CancellationTokenSource(TimeSpan.FromSeconds(5));
            await toast.Show(cts.Token);
        }

        private void SfSegmentedControl_SelectionChanged(object sender, Syncfusion.Maui.Toolkit.SegmentedControl.SelectionChangedEventArgs e)
        {
            Application.Current!.UserAppTheme = e.NewIndex == 0 ? AppTheme.Light : AppTheme.Dark;
        }

        public void UpdateMenuVisibility()
        {
            var user = App.CurrentUser;
            foreach (var item in this.Items)
            {
                if (item.Title == "Login")
                {
                    item.IsVisible = user == null;
                }
                else
                {
                    item.IsVisible = user != null && user.HasPermission(item.Title);
                }
            }
        }
    }
}
